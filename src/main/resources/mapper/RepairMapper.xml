<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hstc.edu.cn.mapper.RepairMapper">
    <resultMap type="Repair" id="repairResult">
        <result property="repairNum" column="repairNum"/>
        <result property="submitTime" column="submitTime"/>
        <result property="resolveTime" column="resolveTime"/>
        <result property="repairReason" column="repairReason"/>
        <result property="porpertyName" column="porpertyName"/>
        <result property="addrezz" column="addrezz"/>
        <result property="studentNum" column="studentNum"/>
        <result property="repairStatus" column="repairStatus"/>
    </resultMap>
    <select id="getRepair" parameterType="Map" resultMap="repairResult">
        SELECT * FROM repair
        <where>
            <if test="repairStatus!=null">
                repairStatus=#{repairStatus}
            </if>
        </where>
        order by submitTime desc
            <if test="start!=null and pageSize!=null">
                limit #{start},#{pageSize}
            </if>
    </select>

    <select id="getRepairTotal" parameterType="Map" resultType="long">
        select count(*) from `repair`
        <where>
            <if test="repairStatus!=null">
                repairStatus=#{repairStatus}
            </if>
        </where>
    </select>

    <delete id="deleteRepair" parameterType="Integer">
        DELETE FROM repair WHERE repairNum in
        <foreach collection="array" item="repairNum" open="(" separator="," close=")">
            #{repairNum}
        </foreach>
    </delete>

    <select id="getOneRepair" parameterType="int" resultMap="repairResult">
        SELECT * FROM repair WHERE repairNum=#{repairNum}
    </select>

    <update id="updateRepair" parameterType="Repair">
        UPDATE repair SET resolveTime=now(),repairStatus=#{repairStatus} WHERE repairNum=#{repairNum}
    </update>

    <select id="searchRepair" parameterType="Map" resultMap="repairResult">
        SELECT * FROM repair
        <where>
            <if test="repairStatus!=null">
               repairStatus=#{repairStatus}
            </if>
            <if test="repairSearch!=null">
                and (repairNum LIKE #{repairSearch}
                OR DATE_FORMAT(submitTime,'%Y年%m月%d日') LIKE #{repairSearch}
                OR repairReason LIKE #{repairSearch}
                OR porpertyName LIKE #{repairSearch}
                OR addrezz LIKE #{repairSearch}
                OR studentNum LIKE #{repairSearch})
            </if>
        </where>
        order by submitTime desc
        <if test="start!=null and pageSize!=null">
            limit #{start},#{pageSize}
        </if>
    </select>
    <select id="getRepairSearchAll" parameterType="Map" resultType="long">
        SELECT count(*) FROM repair
        <where>
            <if test="repairStatus!=null">
               repairStatus=#{repairStatus}
            </if>
            <if test="repairSearch!=null and repairSearch!=''">
                and (repairNum LIKE #{repairSearch}
                OR DATE_FORMAT(submitTime,'%Y年%m月%d日') LIKE #{repairSearch}
                OR repairReason LIKE #{repairSearch}
                OR porpertyName LIKE #{repairSearch}
                OR addrezz LIKE #{repairSearch}
                OR studentNum LIKE #{repairSearch})
            </if>
        </where>
    </select>

    <insert id="addRepair" parameterType="Repair" keyProperty="situationId" useGeneratedKeys="true">
        INSERT INTO repair VALUES (NULL ,now(),NULL ,#{repairReason},#{porpertyName},#{addrezz},#{studentNum},0)
    </insert>
    <select id="getRepairByNum" parameterType="int" resultMap="repairResult">
        SELECT * FROM repair WHERE studentNum=#{studentNum} order by submitTime desc
    </select>

</mapper>